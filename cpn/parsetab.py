
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARCS CLOSESET COMMA EQUALS EXPRESSION LABEL LPAREN MARKINGS NUMBER OPENSET PLACES PLUSPLUS RPAREN TRANSITIONSpetrinet : PLACES EQUALS OPENSET places CLOSESET                      TRANSITIONS EQUALS OPENSET transitions CLOSESET                      ARCS EQUALS OPENSET arcs CLOSESET                      MARKINGS EQUALS OPENSET markings CLOSESETplaces : place COMMA places\n                  | placetransitions : transition COMMA transitions\n                       | transitionarcs : arc COMMA arcs\n                | arcmarkings : marking COMMA markings\n                    | markingplace : LABEL LPAREN RPARENtransition : LABEL LPAREN RPARENarc : LPAREN LABEL COMMA LABEL RPAREN\n               | LPAREN LABEL COMMA LABEL COMMA LABEL RPARENmarking : LPAREN LABEL COMMA tokens RPARENtokens : NUMBER EXPRESSION\n                  | NUMBER EXPRESSION PLUSPLUS tokens'
    
_lr_action_items = {'PLACES':([0,],[2,]),'$end':([1,45,],[0,-1,]),'EQUALS':([2,11,22,33,],[3,14,25,36,]),'OPENSET':([3,14,25,36,],[4,15,26,38,]),'LABEL':([4,9,15,20,29,35,39,43,],[7,7,18,18,32,37,44,47,]),'CLOSESET':([5,6,12,13,16,17,23,24,27,28,34,40,41,42,48,49,53,],[8,-3,-2,-10,19,-5,-4,-11,30,-7,-6,-12,45,-9,-13,-8,-14,]),'COMMA':([6,13,17,24,28,32,37,40,42,47,48,53,],[9,-10,20,-11,31,35,39,-12,46,50,-13,-14,]),'LPAREN':([7,18,26,31,38,46,],[10,21,29,29,43,43,]),'TRANSITIONS':([8,],[11,]),'RPAREN':([10,21,37,44,51,54,56,],[13,24,40,48,53,-15,-16,]),'ARCS':([19,],[22,]),'MARKINGS':([30,],[33,]),'NUMBER':([50,55,],[52,52,]),'EXPRESSION':([52,],[54,]),'PLUSPLUS':([54,],[55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'petrinet':([0,],[1,]),'places':([4,9,],[5,12,]),'place':([4,9,],[6,6,]),'transitions':([15,20,],[16,23,]),'transition':([15,20,],[17,17,]),'arcs':([26,31,],[27,34,]),'arc':([26,31,],[28,28,]),'markings':([38,46,],[41,49,]),'marking':([38,46,],[42,42,]),'tokens':([50,55,],[51,56,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> petrinet","S'",1,None,None,None),
  ('petrinet -> PLACES EQUALS OPENSET places CLOSESET TRANSITIONS EQUALS OPENSET transitions CLOSESET ARCS EQUALS OPENSET arcs CLOSESET MARKINGS EQUALS OPENSET markings CLOSESET','petrinet',20,'p_petrinet','pn_parser.py',72),
  ('places -> place COMMA places','places',3,'p_places','pn_parser.py',79),
  ('places -> place','places',1,'p_places','pn_parser.py',80),
  ('transitions -> transition COMMA transitions','transitions',3,'p_transitions','pn_parser.py',84),
  ('transitions -> transition','transitions',1,'p_transitions','pn_parser.py',85),
  ('arcs -> arc COMMA arcs','arcs',3,'p_arcs','pn_parser.py',89),
  ('arcs -> arc','arcs',1,'p_arcs','pn_parser.py',90),
  ('markings -> marking COMMA markings','markings',3,'p_markings','pn_parser.py',94),
  ('markings -> marking','markings',1,'p_markings','pn_parser.py',95),
  ('place -> LABEL LPAREN RPAREN','place',3,'p_place','pn_parser.py',99),
  ('transition -> LABEL LPAREN RPAREN','transition',3,'p_transition','pn_parser.py',103),
  ('arc -> LPAREN LABEL COMMA LABEL RPAREN','arc',5,'p_arc','pn_parser.py',107),
  ('arc -> LPAREN LABEL COMMA LABEL COMMA LABEL RPAREN','arc',7,'p_arc','pn_parser.py',108),
  ('marking -> LPAREN LABEL COMMA tokens RPAREN','marking',5,'p_marking','pn_parser.py',115),
  ('tokens -> NUMBER EXPRESSION','tokens',2,'p_tokens','pn_parser.py',119),
  ('tokens -> NUMBER EXPRESSION PLUSPLUS tokens','tokens',4,'p_tokens','pn_parser.py',120),
]
